# License: https://github.com/groovenectar/musiview/blob/master/LICENSE.md
# Homepage: https://c.dup.bz

user www-data;
worker_processes auto;
# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit
# https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile
worker_rlimit_nofile 8192;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
	# Should be < worker_rlimit_nofile.
	# Default: 512
	# https://nginx.org/en/docs/ngx_core_module.html#worker_connections
	worker_connections 8000;
	multi_accept on;
}

http {
	# Include $http_x_forwarded_for within default format used in log files
	# https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for" $request_time';

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	types_hash_max_size 2048;
	keepalive_timeout 80;

	# Prevent Nginx from sending its version number in the "Server" response header.
	# https://nginx.org/en/docs/http/ngx_http_core_module.html#server_tokens
	server_tokens off;

	#server_names_hash_bucket_size 64;
	#server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Add X-Frame-Options for HTML documents.
	# h5bp/security/x-frame-options.conf
	map $sent_http_content_type $x_frame_options {
		~*text/html SAMEORIGIN;
	}

	# ----------------------------------------------------------------------
	# | Cache expiration                                                   |
	# ----------------------------------------------------------------------

	# Serve resources with a far-future expiration date.
	#
	# (!) If you don't control versioning with filename-based cache busting, you
	#     should consider lowering the cache times to something like one week.
	#
	# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control
	# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires
	# https://nginx.org/en/docs/http/ngx_http_headers_module.html#expires
	map $sent_http_content_type $expires {
		# Default: Fallback
		default                                 1y;

		# Default: No content
		""                                      off;

		# Specific: Assets
		~*image/vnd.microsoft.icon              1w;
		~*image/x-icon                          1w;

		# Specific: Data interchange
		~*application/atom\+xml                 1h;
		~*application/rdf\+xml                  1h;
		~*application/rss\+xml                  1h;

		# Specific: Documents
		~*text/html                             1d;
		~*text/markdown                         1d;
		~*text/calendar                         epoch;

		# Specific: Other
		~*text/x-cross-domain-policy            1w;

		# Generic: Data
		~*json                                  1d;
		~*xml                                   1d;

		# Generic: Assets
		~*application/javascript              1y;
		~*application/x-javascript            1y;
		~*text/javascript                     1y;
		~*text/css                            1y;

		# Generic: Medias
		~*audio/                              1m;
		~*image/                              1m;
		~*video/                              1m;
		~*font/                               1y;
	}

	expires $expires;

	##
	# SSL Settings
	##
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_session_timeout 24h;
	ssl_session_cache shared:SSL:10m;

	# (4) Disable session tickets
	#     Session tickets keys are not auto-rotated. Only a HUP / restart will do
	#     so and when a restart is performed the previous key is lost, which resets
	#     all previous sessions.
	#     Only enable session tickets if you set up a manual rotation mechanism.
	#     https://trac.nginx.org/nginx/changeset/1356a3b9692441e163b4e78be4e9f5a46c7479e9/nginx
	#     https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_tickets
	ssl_session_tickets off;

	# (5) The TLS 1.2 and 1.3 ciphers in use in current policies are not considered
	#     dangerous. This directive let the client choose the one that best fits their needs.
	#     https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_prefer_server_ciphers
	#     https://wiki.mozilla.org/Security/Server_Side_TLS
	ssl_prefer_server_ciphers off;

	##
	# Logging Settings
	##

	gzip  on;

	# Compression level (1-9).
	# 5 is a perfect compromise between size and CPU usage, offering about 75%
	# reduction for most ASCII files (almost identical to level 9).
	# Default: 1
	gzip_comp_level 5;

	# Don't compress anything that's already small and unlikely to shrink much if at
	# all (the default is 20 bytes, which is bad as that usually leads to larger
	# files after gzipping).
	# Default: 20
	gzip_min_length 256;

	# Compress all output labeled with one of the following MIME-types.
	# `text/html` is always compressed by gzip module.
	# Default: text/html
	gzip_types application/atom+xml application/geo+json application/javascript application/x-javascript application/json application/ld+json application/manifest+json application/rdf+xml application/rss+xml application/xhtml+xml application/xml font/eot font/otf font/ttf image/svg+xml image/vnd.microsoft.icon image/x-icon text/cache-manifest text/calendar text/css text/javascript text/markdown text/plain text/xml text/vcard text/vtt text/x-component text/x-cross-domain-policy;

	server {
		server_name c.dup.bz staging.c.dup.bz;

		listen 443 ssl;
		ssl_certificate /run/secrets/domain_cert;
		ssl_certificate_key /run/secrets/domain_cert_key;

		access_log /var/log/nginx/c.dup.bz_access.log main;
		error_log /var/log/nginx/c.dup.bz_error.log warn;

		charset utf-8;

		root /app/module/Musiview/webroot;

		location / {
			index index.html index.php;
			try_files $uri $uri/ /index.php?$args;
		}

		location ~ \.php$ {
			include fastcgi_params;
			fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_max_temp_file_size 0;
			include fastcgi_params;
		}

		# Block access to all hidden files and directories except for the
		# visible content from within the `/.well-known/` hidden directory.
		location ~* /\.(?!well-known\/) {
			deny all;
		}

		# Prevent some browsers from MIME-sniffing the response.
		#
		# This reduces exposure to drive-by download attacks and cross-origin data
		# leaks, and should be left uncommented, especially if the server is serving
		# user-uploaded content or content that could potentially be treated as
		# executable by the browser.
		#
		# https://owasp.org/www-project-secure-headers/#x-content-type-options
		# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
		# https://blogs.msdn.microsoft.com/ie/2008/07/02/ie8-security-part-v-comprehensive-protection/
		# https://mimesniff.spec.whatwg.org/
		add_header X-Content-Type-Options nosniff always;

		# Protect website against clickjacking.
		#
		# The example below sends the `X-Frame-Options` response header with the value
		# `DENY`, informing browsers not to display the content of the web page in any
		# frame.
		#
		# This might not be the best setting for everyone. You should read about the
		# other two possible values the `X-Frame-Options` header field can have:
		# `SAMEORIGIN` and `ALLOW-FROM`.
		# https://tools.ietf.org/html/rfc7034#section-2.1.
		#
		# Keep in mind that while you could send the `X-Frame-Options` header for all
		# of your website's pages, this has the potential downside that it forbids even
		# non-malicious framing of your content.
		#
		# Nonetheless, you should ensure that you send the `X-Frame-Options` header for
		# all pages that allow a user to make a state-changing operation (e.g: pages
		# that contain one-click purchase links, checkout or bank-transfer confirmation
		# pages, pages that make permanent configuration changes, etc.).
		#
		# Sending the `X-Frame-Options` header can also protect your website against
		# more than just clickjacking attacks.
		# https://cure53.de/xfo-clickjacking.pdf.
		#
		# (!) The `Content-Security-Policy` header has a `frame-ancestors` directive
		#     which obsoletes this header for supporting browsers.
		#
		# https://tools.ietf.org/html/rfc7034
		# https://owasp.org/www-project-secure-headers/#x-frame-options
		# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
		# https://docs.microsoft.com/archive/blogs/ieinternals/combating-clickjacking-with-x-frame-options
		add_header X-Frame-Options $x_frame_options always;
	}
	server {
		listen 80;
		server_name c.dup.bz staging.c.dup.bz;
		return 301 https://${host}${request_uri};
	}

#	server {
#		server_name hq.dup.bz;
#
#		listen 443 ssl;
#		ssl_certificate /app/system/deploy/docker/musiview-web/cert/${host}/fullchain.pem;
#		ssl_certificate_key /app/system/deploy/docker/musiview-web/cert/${host}/privkey.pem;
#
#		access_log /var/log/nginx/hq.dup.bz_access.log main;
#		error_log /var/log/nginx/hq.dup.bz_error.log warn;
#
#		location / {
#			resolver 1.1.1.1 ipv6=off;
#			proxy_pass http://localhost:3333/;
#			proxy_set_header X-Real-IP $remote_addr;
#			proxy_set_header Host $host;
#			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#			proxy_set_header X-Forwarded-Proto https;
#			proxy_redirect off;
#		}
#	}
#	server {
#		listen 80;
#		server_name hq.dup.bz;
#		return 301 https://${host}${request_uri};
#	}
}
